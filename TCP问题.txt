1.TCP如何保证可靠性和有序性
对要发送的数据，TCP都会按递交给对方，且要保证对方一定收到。
实现上，TCP把要发送的数据一次按次序编号(seq),
对于每个发送的seq, 都需要接收方明确的回应一个ACK。表示接收方已经接收到了。
另外接收方在组装数据时，也要按照seq的顺序组装。

TCP用序号对每个字节进行计数。序号是32bit的无符号数，序号到达232－1后又从0开始。


2.TCP的滑动窗口是什么？
为防止发送方过快，超出接收方的处理能力。所以接收方发送ACK数据包时，
会指定一个winSize,来表示自己现在的接收缓存剩余大小。发送方不能同时发送大于winSize
的数据(这种接收方通知发送方winSize的机制叫做窗口通知)

窗口通知在有些极端情况下会导致死锁问题，例如：接收方接收到一个数据包后，发现自己的
接收缓存已经满了，于是在发送给发送方的ACK报文中设置winSize为0，发送方于是把自己的
winSize设置为0，不再发送。当应用程序读取了接收方的接收缓存，那么接收方又可以接收数据了，
但是接收方要等发送方给自己发送一个数据后，自己才能把最新的winSize设置在回应的ACK报文中。
所以接收方也进入等待，此时TCP处于死锁状态。

为了处理这种死锁，发送方需要主动发送一个窗口探查的包，去探查接收方当前的winSize。
窗口探查动作可以被一个坚持定时器触发。

3. 窗口探查的包要必须携带数据吗？
必须。
窗口探查有两种做法：
1.使用正常要发送的数据发送一个字节。
2.发送一个已经被确认的数据。
以上实现都符合RFC标准。这两种情况接收方都有义务回应ACK。
如果使用0字节的TCP ACK来探测winSize, 接收端时没有强制义务去回应的。

4.TCP能发送字节0的数据吗？
TCP的三次连接握手，TCP不含数据的ACK, TCP的四次连接断开。
这些报文都不含数据。可以视为字节为零的数据包。
https://www.zhihu.com/question/266624387


5. 你能描述ACK, SEQ Number的变化吗
经过握手，client和server已经各自协商出来一个
自己起始seqNumber,

6. TCP协议握手为什么要个随机一个数字并加一？
https://www.zhihu.com/question/34400902
握手时为什么要选用把ACK设置为SYN + 1 https://blog.csdn.net/oldfish_C/article/details/105150516

ACK的含义是ack值前面的字节我都收到了，现在期望收到ack以及后面的字节。
SEQ的含义是当前数据包最后一个字节的编号

https://www.cs.miami.edu/home/burt/learning/Csc524.032/notes/tcp_nutshell.html#:~:text=Sequence%20Numbers&text=The%20SYN%20packets%20consume%20one,the%20receiver%20expects%20to%20receive.

Sequence Numbers

All bytes in a TCP connection are numbered, beginning at a randomly chosen initial sequence number (ISN).
The SYN packets consume one sequence number, so actual data will begin at ISN+1.
The sequence number is the byte number of the first byte of data in the TCP packet sent (also called a TCP segment).
The acknowledgement number is the sequence number of the next byte the receiver expects to receive.

The receiver ack'ing sequence number x acknowledges receipt of all data bytes less than (but not including) byte number x.

The sequence number is always valid.
The acknowledgement number is only valid when the ACK flag is one.
The only time the ACK flag is not set, that is,
the only time there is not a valid acknowledgement number in the TCP header, is during the first packet of connection set-up.

https://www.cs.miami.edu/home/burt/learning/Csc524.032/
7. 什么是滑动窗口与窗口缩放因子

8.TCP是怎么重传的?
有两种情况触发重传
1.ACK接收超时
2.发送方使用ACK触发了快速重传机制
https://blog.csdn.net/whgtheone/article/details/80983882
重传会触发拥塞控制机制
TCP采用的是累计确认机制

9.TCP如何确定滑动窗口的大小
swnd = min(rwnd, cwnd*mss)
腾讯技术对TCP 拥塞控制详解

10.TCP有哪些方法解决拥塞？请详细讲解
1.慢开始
2.拥塞控制
3.快重传
4.快恢复

11. TCP收到还未发送的seq的ACK会怎么处理？


12. TCP如何处理seq回环的问题

13. 在单个TCP连接上能达到的最大吞吐量是多少？
maxWindowSize/RTT
2**30 / RTT
所以假设RTT 10ms，那么最大吞吐量为100G/s

14. 如何处理Seq回绕的情况？
seq(2**32)发送4G数据就会回绕，如果回绕时间<MST,
那么第一遍发送的数据，就有可能在第二次时出现。
其实做法是使用使用TCP 的Timstame option来扩展seq
接收方将时间戳视为序列号的一个32 bit的扩展
时间戳每个时间窗口必须加1.

15. TCP如何确定自己的超时重传时间？
TCP需要不停的测量自己的RTT，
最简单一点RTO=2*RTT

